<?php

/**
 * @file
 * Display a Google Custom Search Engine (CSE) on your site.
 */

/**
 * Implements hook_menu().
 */
function google_cse_menu() {

  // If no Search module in core, then we need to make our own admin page.
  if (!module_exists('search')) {
    $items['admin/config/search/cse-settings'] = array(
      'title' => 'Configure Google CSE',
      'description' => '',
      'page callback' => 'backdrop_get_form',
      'page arguments' => array('google_cse_admin_settings'),
      'file' => 'google_cse.admin.inc',
      'access arguments' => array('administer Google CSE'),
    );
  }

  $items['admin/config/search/export-cse'] = array(
    'title' => 'Google CSE XML',
    'description' => 'Export custom search engine code',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'google_cse_render_xml',
    'access callback' => 'google_cse_render_xml_access',
  );

  return $items;
}

/**
 * Implements hook_config_info().
 */
function google_cse_config_info() {
  $prefixes['google_cse.settings'] = array(
    'label' => t('Google CSE settings'),
    'group' => t('Configuration'),
  );
  return $prefixes;
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function google_cse_render_xml() {
  $config = config('google_cse.settings');
  $cse_array = explode(":", $config->get('google_cse_cx'));
  $cse_variables = array(
    "cse_creator" => $cse_array[0],
    "cse_id" => $cse_array[1],
    "title" => $config->get('google_cse_name'),
  );

  print theme('google_cse_xml', array('node' => $cse_variables));
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function google_cse_render_xml_access() {

  return TRUE;
}

/**
 * Implements hook_search_info().
 */
function google_cse_search_info() {
  return array(
    'title' => google_cse_results_tab(),
    'path' => 'google',
    'conditions_callback' => 'google_cse_conditions_callback',
  );
}

/**
 * Search conditions callback.
 */
function google_cse_conditions_callback($keys) {
  $conditions = array();
  return $conditions;
}

/**
 * Implements hook_search_execute().
 */
function google_cse_search_execute($keys = NULL, $conditions = NULL) {
  // Pass search terms to JS so they can be sent in google_cse_results.js
  backdrop_add_js(array('googleCSE' => array('keys' => $keys)), 'setting');
}

/**
 * Builds a query array based on Google CSE settings.
 */
function google_cse_build_query($keys, $sitesearch = NULL, $here = TRUE) {
  return array(
    'q' => $keys,
    'cx' => config_get('google_cse.settings', 'google_cse_cx'),
  );
}

/**
 * Implements hook_search_page().
 */
function google_cse_search_page($results) {
  $output['#theme'] = 'google_cse_results';
  return $output;
}

/**
 * Implements hook_search_admin().
 */
function google_cse_search_admin() {
  module_load_include('admin.inc', 'google_cse');
  return google_cse_admin_settings();
}

/**
 * Implements hook_search_access().
 */
function google_cse_search_access() {
  return user_access('search Google CSE');
}

/**
 * Implements hook_theme().
 */
function google_cse_theme($existing, $type, $theme, $path) {
  return array(
    'google_cse_results' => array(
      'variables' => array('form' => FALSE, 'path' => $path),
      'file' => 'google_cse.theme.inc',
      'template' => 'templates/google_cse_results',
    ),
    // Shows a message when the search does not return any result.
    'google_cse_search_noresults' => array(
      'variables' => array(),
    ),
    'google_cse_xml' => array(
      'template' => 'templates/google_cse_export',
      'variables' => array('node' => NULL),
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function google_cse_block_info() {
  return array(
    'google_cse' => array(
      'info' => t('Google CSE'),
    ),
  );
}

/**
 * Implements hook_block_view().
 */
function google_cse_block_view($delta = '') {
  if (user_access('search Google CSE')) {
    switch ($delta) {
      case 'google_cse':
        return array(
          'subject' => t('Search'),
          'content' => array(
            '#theme' => 'google_cse_results',
            '#form' => TRUE,
          ),
        );
    }
  }
}

/**
 * Return the Google CSE tab title, either a setting or a translation.
 */
function google_cse_results_tab() {
  return ($var = config_get('google_cse.settings', 'google_cse_results_tab')) ? $var : t('Google');
}

/**
 * Implements hook_perm().
 */
function google_cse_permission() {
  $perms = array(
    'search Google CSE' => array(
      'title' => t('Use Google CSE search'),
    ),
    'administer Google CSE' => array(
      'title' => t('Administer Google CSE search'),
    ),
  );

  return $perms;
}

/**
 * Implements hook_init().
 */
function google_cse_init() {
  $config = config('google_cse.settings');
  backdrop_add_js(array(
    'googleCSE' => array(
      'cx' => $config->get('google_cse_cx'),
      'resultsWidth' => intval($config->get('google_cse_results_width')),
      'domain' => $config->get('google_cse_domain'),
      'showWaterMark' => $config->get('google_cse_show_watermark'),
    ),
  ), 'setting');
}

/**
 * Adds custom submit handler for search form.
 */
function google_cse_form_search_form_alter(&$form, &$form_state, $form_id) {
  if ($form['module']['#value'] == 'google_cse') {
    $form['#attributes']['class'][] = 'google-cse';
  }
}

/**
 * Adds custom submit handler for search block form.
 */
function google_cse_form_search_block_form_alter(&$form, &$form_state, $form_id) {
  $info = search_get_default_module_info();
  if ($info['module'] == 'google_cse') {
    $form['#attributes']['class'][] = 'google-cse';
  }
}

/**
 * Brief message to display when no results match the query.
 *
 * @see search_help()
 */
function theme_google_cse_search_noresults() {
  return t('<h2>Sorry, there were no results matching your enquiry.</h2>
    <ul>
    <li>Check the spelling of your keywords</li>
    <li>Try a more specific enquiry (e.g. <em>"Penny Black"</em> instead of <em>"Stamps"</em>).</em></li>
    <li>Be explicit (e.g. <em>"Second class stamp"</em> instead of <em>"Stamp"</em>).</li>
    <li>Include spaces between keywords.</li>
    </ul>');
}

/**
 * Implements hook_autoload_info().
 */
function google_cse_autoload_info() {
  return array(
  );
}
